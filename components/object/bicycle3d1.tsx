"use client";
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { Group, Material, Mesh, Object3DEventMap } from "three";

export interface BicycleProps {
  x: number;
  y: number;
  z: number;
  rotateX?: number;
  rotateY?: number;
  rotateZ?: number;
  scale?: number;
}

export function Bicycle3d1({
  x,
  y,
  z,
  rotateX = -Math.PI / 2,
  rotateY = 0,
  rotateZ = 0,
  scale = 1,
}: BicycleProps) {
  const meshRef = useRef<Mesh>(null);
  const { nodes, materials } = useGLTF("/3d/bicycle1.glb");

  useFrame((state, delta) => {
    if (!meshRef.current) return;
    meshRef.current.rotation.x += delta / 4;
    meshRef.current.rotation.y += delta / 8;
  });

  return (
    <mesh
      ref={meshRef}
      castShadow
      receiveShadow
      //@ts-ignore
      geometry={nodes.Object_2.geometry}
      material={materials.main_texture}
      rotation={[rotateX, rotateY, rotateZ]}
      position={[x, y, z]}
      scale={[scale, scale, scale]}
    />
  );
}

useGLTF.preload("/3d/bicycle1.glb");
